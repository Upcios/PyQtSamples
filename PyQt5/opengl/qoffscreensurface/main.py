# -*- coding: utf-8 -*-

import sys
from PyQt5 import QtCore, QtWidgets
import opengl_window
import texture_uploader

if __name__ == '__main__':
    app = QtWidgets.QApplication( sys.argv )

    # Only to display something.
    window = opengl_window.OpenGLWindow()
    # This class is to show how to use QOffscreenSurface.
    uploader = texture_uploader.TextureUploader( window.format(), True )

    # As we want to display texture generated by uploader in window, we
    # must to share their context. To do this we must wait until window
    # is exposed (so initializeGL is done and its context is valid).
    window.initialized.connect( uploader.setSharedContext )
    # Each time new texture is available, window is refreshed.
    uploader.textureGenerated.connect( window.updateTexture )

    # New image every 20 ms (more or less but here it doesnt matter).
    timer = QtCore.QTimer()
    timer.timeout.connect( uploader.render )
    timer.start( 20 )

    window.show()

    app.exec_()

